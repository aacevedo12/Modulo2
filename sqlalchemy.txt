from sqlalchemy import create_engine, Column, Integer, String
from sqlalchemy.orm import sessionmaker
from sqlalchemy.ext.declarative import declarative_base

# Conexi贸n a la base de datos
engine = create_engine('sqlite:///slang_panameno.db', echo=False)
Session = sessionmaker(bind=engine)
Base = declarative_base()

# Definici贸n de la tabla
class Palabra(Base):
    __tablename__ = 'palabras'

    id = Column(Integer, primary_key=True)
    palabra = Column(String(50), unique=True, nullable=False)
    significado = Column(String(200), nullable=False)

    def __repr__(self):
        return f"<Palabra(palabra='{self.palabra}', significado='{self.significado}')>"

# Creaci贸n de la tabla si no existe
Base.metadata.create_all(engine)

# Funciones de la aplicaci贸n
def agregar_palabra():
    palabra = input("Ingresa la palabra: ")
    # Comprobar si no existe
    posible_significado = buscar_significado_palabra(palabra)
    if posible_significado:
        print(f"La palabra '{palabra}' ya existe")
    else:
        significado = input("Ingresa el significado: ")
        session = Session()
        palabra_nueva = Palabra(palabra=palabra, significado=significado)
        session.add(palabra_nueva)
        session.commit()
        print("Palabra agregada")

def editar_palabra():
    palabra = input("Ingresa la palabra que quieres editar: ")
    session = Session()
    palabra_existente = session.query(Palabra).filter_by(palabra=palabra).first()
    if palabra_existente:
        nuevo_significado = input("Ingresa el nuevo significado: ")
        palabra_existente.significado = nuevo_significado
        session.commit()
        print("Palabra actualizada")
    else:
        print(f"La palabra '{palabra}' no existe")

def eliminar_palabra():
    palabra = input("Ingresa la palabra a eliminar: ")
    session = Session()
    palabra_existente = session.query(Palabra).filter_by(palabra=palabra).first()
    if palabra_existente:
        session.delete(palabra_existente)
        session.commit()
        print("Palabra eliminada")
    else:
        print(f"La palabra '{palabra}' no existe")

def ver_listado_palabras():
    session = Session()
    palabras = session.query(Palabra).all()
    print("=== Lista de palabras ===")
    for palabra in palabras:
        print(palabra.palabra)

def buscar_significado_palabra(palabra):
    session = Session()
    palabra_existente = session.query(Palabra).filter_by(palabra=palabra).first()
    if palabra_existente:
        return palabra_existente.significado
    else:
        print(f"Palabra '{palabra}' no encontrada")
        return None

def principal():
    menu = """
a) Agregar nueva palabra
c) Editar palabra existente
d) Eliminar palabra existente
e) Ver listado de palabras
f) Buscar significado de palabra
g) Salir
Elige: """
    eleccion = ""
    while eleccion != "g":
        eleccion = input(menu)
        if eleccion == "a":
            agregar_palabra()
        elif eleccion == "c":
            editar_palabra()
        elif eleccion == "d":
            eliminar_palabra()
